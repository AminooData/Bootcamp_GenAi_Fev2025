#Exercise 1
# Utilisation de '\n' pour ajouter un saut de ligne entre chaque "Hello world"
print("Hello world\nHello world\nHello world\nHello world")

#Exercise 2
# Calcul de la puissance : 99 √† la puissance 3
puissance = 99 ** 3  

# Multiplication du r√©sultat par 8
resultat = puissance * 8  

# Affichage du r√©sultat final
print(resultat)

#Exercise 3
#  Demande √† l'utilisateur d'entrer son pr√©nom
user_name = input("Quel est ton pr√©nom ? ")  

#  Notre pr√©nom pour comparer
my_name = "Amin"  

#  V√©rifie si l'utilisateur a le m√™me pr√©nom
if user_name == my_name:  
    print("Wow ! Nous avons le m√™me pr√©nom !")  #  Affiche ce message si les pr√©noms sont identiques
else:  
    print(f"Oh ! Enchant√©, {user_name}, joli pr√©nom !")  #  Affiche un message personnalis√©

#Exercise 4

use_tall =int(input("Quelle taille faite vous ?"))

tall = 145

if use_tall >=  tall:
    print("Vous pouvez monter √† bord !")
else:
    print("D√©sol√©, vous ne pouvez pas monter √† bord !")
    
#Exercise 5
    # Cr√©er un ensemble appel√© my_fav_numbers avec tous vos num√©ros favoris
my_fav_numbers = {7, 14, 21, 28}

# Ajouter deux nouveaux nombres √† l'ensemble
my_fav_numbers.add(35)
my_fav_numbers.add(42)

# Supprimer le dernier num√©ro (les ensembles ne sont pas ordonn√©s, donc on ne peut pas directement supprimer le "dernier")
# Cependant, on peut supprimer un √©l√©ment sp√©cifique si on le conna√Æt
my_fav_numbers.discard(42)  # Supprime 42 si pr√©sent

# Cr√©er un ensemble appel√© friend_fav_numbers avec les num√©ros pr√©f√©r√©s de vos amis
friend_fav_numbers = {3, 6, 9, 12}

# Concat√©ner my_fav_numbers et friend_fav_numbers vers une nouvelle variable appel√©e our_fav_numbers
our_fav_numbers = my_fav_numbers.union(friend_fav_numbers)

# Afficher les r√©sultats
print("Mes num√©ros favoris:", my_fav_numbers)
print("Les num√©ros favoris de mes amis:", friend_fav_numbers)
print("Nos num√©ros favoris combin√©s:", our_fav_numbers)

# Exercise 6
#  Faux 

# Exercise 7
#  D√©finition de la liste de d√©part
basket = ["Banana", "Apples", "Oranges", "Blueberries"]

#  1. Supprimer "Banana" de la liste
basket.remove("Banana")  # La m√©thode .remove() supprime un √©l√©ment par son nom

#  2. Supprimer "Blueberries" de la liste
basket.remove("Blueberries")  # On supprime aussi Blueberries de la liste

#  3. Ajouter "Kiwi" √† la fin de la liste
basket.append("Kiwi")  # La m√©thode .append() ajoute un √©l√©ment √† la fin

#  4. Ajouter "Apples" au d√©but de la liste
basket.insert(0, "Apples")  # .insert(position, √©l√©ment) ajoute "Apples" √† l'index 0 (d√©but)

#  5. Compter combien de "Apples" sont pr√©sents dans la liste
apple_count = basket.count("Apples")  # .count() compte le nombre d'occurrences d'un √©l√©ment
print(f"Il y a {apple_count} pommes dans le panier.")  # Affiche le nombre de pommes

#  6. Vider compl√®tement la liste
basket.clear()  # .clear() supprime tous les √©l√©ments de la liste

#  7. Afficher la liste vide
print(basket)  # Affiche []

# Exercise 8

#  Liste des commandes initiales
sandwich_orders = ["Tuna sandwich", "Pastrami sandwich", "Avocado sandwich",
                   "Pastrami sandwich", "Egg sandwich", "Chicken sandwich",
                   "Pastrami sandwich"]

# √âtape 1 : Supprimer tous les "Pastrami sandwich" car il n'y en a plus
while "Pastrami sandwich" in sandwich_orders:  
    sandwich_orders.remove("Pastrami sandwich")  

#  √âtape 2 : Cr√©er une liste pour stocker les sandwichs pr√©par√©s
finished_sandwiches = []  

#  √âtape 3 : Pr√©parer chaque sandwich
while sandwich_orders:  
    current_sandwich = sandwich_orders.pop(0)  # üìå Retirer le premier sandwich de la liste
    print(f"Je pr√©pare votre {current_sandwich}.")  
    finished_sandwiches.append(current_sandwich)  

#  √âtape 4 : Afficher tous les sandwichs pr√©par√©s
print("\nTous les sandwichs ont √©t√© pr√©par√©s :")
for sandwich in finished_sandwiches:  
    print(f"- {sandwich}")  
